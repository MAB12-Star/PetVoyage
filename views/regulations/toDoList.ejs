<% layout('layouts/boilerplate') %>

<div class="container mt-2">
    
    <div class="row">
        <!-- To-Do Section -->
        <h2 class="alert-heading text-primary-emphasis text-center"><strong> Manage Your Pet Travel Here</strong></h2>
        <hr>
        <div class="alert alert-info mt-2" role="alert">
         
            <P>
                <strong>Manage Your Tasks:</strong> Simply drag a task to update its status. For example, move a task from <strong>"To-Do"</strong> to <strong>"In Progress"</strong> when you're working on it, or from <strong>"In Progress"</strong> to <strong>"Completed"</strong> when you're finished.
            </P>
        </div>
        
           
        <div class="col-md-4">
            
            <div class="card border-secondary shadow-lg p-3 mb-5 bg-white rounded">
                <h3 class="text-primary">To-Do</h3>
                <ul id="To-Do" class="task-list border p-3 rounded">
                    <% (toDoList["To-Do"] || []).forEach(task => { %>
                        <div class="card border-dark shadow-sm p-2 mb-2 bg-light rounded task-item" draggable="true" data-task="<%= task %>" data-section="To-Do">
                            <%= task %>
                        </div>
                    <% }) %>
                </ul>
            </div>
        </div>

        <!-- In Progress Section -->
        <div class="col-md-4">
            <div class="card border-secondary shadow-lg p-3 mb-5 bg-white rounded">
                <h3 class="text-info">In Progress</h3>
                <ul id="in-progress" class="task-list border p-3 rounded">
                    <% (toDoList["in-progress"] || []).forEach(task => { %>
                        <div class="card border-dark shadow-sm p-2 mb-2 bg-light rounded task-item" draggable="true" data-task="<%= task %>" data-section="in-progress">
                            <%= task %>
                        </div>
                    <% }) %>
                </ul>
            </div>
        </div>

        <!-- Completed Section -->
        <div class="col-md-4">
            <div class="card border-secondary shadow-lg p-3 mb-5 bg-white rounded">
                <h3 class="text-success">Completed</h3>
                <ul id="completed" class="task-list border p-3 rounded">
                    <% (toDoList["completed"] || []).forEach(task => { %>
                        <div class="card border-dark shadow-sm p-2 mb-2 bg-light rounded task-item" draggable="true" data-task="<%= task %>" data-section="completed">
                            <%= task %>
                        </div>
                    <% }) %>
                </ul>
            </div>
        </div>
    </div>
</div>

<div id="auth-status" data-authenticated="<%= isAuthenticated %>"></div>


<script>
    const isAuthenticated = document.getElementById('auth-status').dataset.authenticated === 'true';
    console.log('isAuthenticated at script start:', isAuthenticated);

    document.querySelectorAll('.task-list').forEach(list => {
        list.addEventListener('dragover', (e) => e.preventDefault());

        list.addEventListener('drop', async (e) => {
            e.preventDefault();

            const data = JSON.parse(e.dataTransfer.getData('text/plain'));
            const task = data.task;
            const fromSection = data.section;
            const toSection = e.currentTarget.id;

           

            if (!task || !fromSection || !toSection) {
                return alert('Invalid drag-and-drop data.');
            }

            if (isAuthenticated) {
                try {
                    const response = await fetch('/toDoList/update', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ task, fromSection, toSection }),
                    });

                    if (response.ok) {
                        const updatedToDoList = await response.json();
                        updateToDoLists(updatedToDoList);
                    } else {
                        console.error('Failed to update task on server.');
                    }
                } catch (error) {
                    console.error('Error during drop:', error);
                }
            } else {
                alert('Please log in to save your progress.');
            }
        });
    });

    // Add shadow effect when dragging a task
    document.querySelectorAll('.task-item').forEach(item => {
        item.addEventListener('dragstart', (e) => {
            const taskData = {
                task: e.target.dataset.task,
                section: e.target.dataset.section,
            };
            e.dataTransfer.setData('text/plain', JSON.stringify(taskData));

            // Add shadow effect
            e.target.classList.add('dragging');
        });

        item.addEventListener('dragend', (e) => {
            // Remove shadow effect
            e.target.classList.remove('dragging');
        });
    });

    function updateToDoLists(toDoList) {
        const sections = { "To-Do": "To-Do", "in-progress": "in-progress", "completed": "completed" };
        for (const [section, id] of Object.entries(sections)) {
            const list = document.getElementById(id);
            list.innerHTML = '';
            (toDoList[section] || []).forEach(task => {
                const item = document.createElement('div');
                item.className = 'card border-dark shadow-sm p-2 mb-2 bg-light rounded task-item';
                item.draggable = true;
                item.dataset.task = task;
                item.dataset.section = section;
                item.textContent = task;
                item.addEventListener('dragstart', (e) => {
                    e.dataTransfer.setData('text/plain', JSON.stringify({ task, section }));
                    e.target.classList.add('dragging');
                });
                item.addEventListener('dragend', (e) => {
                    e.target.classList.remove('dragging');
                });
                list.appendChild(item);
            });
        }
    }
</script>
