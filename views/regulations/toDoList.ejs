<% layout('layouts/boilerplate') %>

<div class="container mt-5">
    <div class="row">
        <!-- To-Do Section -->
        <div class="col-md-4">
            <h3 class="text-primary">To-Do</h3>
            <ul id="todo" class="task-list border p-3 rounded">
                <% (toDoList["To-Do"] || []).forEach(task => { %>
                    <li class="task-item border-bottom py-2" draggable="true" data-task="<%= task %>" data-section="To-Do">
                        <%= task %>
                    </li>
                <% }) %>
            </ul>
        </div>

        <!-- In Progress Section -->
        <div class="col-md-4">
            <h3 class="text-warning">In Progress</h3>
            <ul id="in-progress" class="task-list border p-3 rounded">
                <% (toDoList["In Progress"] || []).forEach(task => { %>
                    <li class="task-item border-bottom py-2" draggable="true" data-task="<%= task %>" data-section="In Progress">
                        <%= task %>
                    </li>
                <% }) %>
            </ul>
        </div>

        <!-- Completed Section -->
        <div class="col-md-4">
            <h3 class="text-success">Completed</h3>
            <ul id="completed" class="task-list border p-3 rounded">
                <% (toDoList["Completed"] || []).forEach(task => { %>
                    <li class="task-item border-bottom py-2" draggable="true" data-task="<%= task %>" data-section="Completed">
                        <%= task %>
                    </li>
                <% }) %>
            </ul>
        </div>
    </div>
</div>

<script>
    // Drag-and-drop functionality
    document.querySelectorAll('.task-list').forEach(list => {
        list.addEventListener('dragover', (e) => e.preventDefault());

        list.addEventListener('drop', async (e) => {
            e.preventDefault();

            // Get the transferred data (the task object)
            const data = JSON.parse(e.dataTransfer.getData('text/plain'));
            const task = data.task;
            const fromSection = data.section;
            const toSection = e.currentTarget.id;

            // Log to ensure values are being transferred correctly
            console.log('Dropped task:', task);
            console.log('From Section:', fromSection);
            console.log('To Section:', toSection);

            // Find the target list and move the task element there
            const targetList = document.getElementById(toSection);
            if (targetList) {
                const taskElement = document.querySelector(`[data-task="${task}"]`);
                if (taskElement) targetList.appendChild(taskElement);
            }

            if (isAuthenticated) {
                try {
                    // Send the updated task data to the server
                    const response = await fetch('/toDoList/update', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ task, fromSection, toSection }),
                    });

                    if (!response.ok) {
                        alert('Failed to update task on the server.');
                    }
                } catch (error) {
                    console.error('Error during task update:', error);
                    alert('An error occurred while saving your progress.');
                }
            } else {
                alert('Please log in to save your progress.');
            }
        });
    });

    // Dragstart: Set the task data when an item is dragged
    document.querySelectorAll('.task-item').forEach(item => {
        item.addEventListener('dragstart', (e) => {
            const taskData = {
                task: e.target.dataset.task,  // Get the task name
                section: e.target.dataset.section,  // Get the section name
            };
            console.log('Dragging task data:', taskData);  // Log the task data
            e.dataTransfer.setData('text/plain', JSON.stringify(taskData));
        });
    });
</script>


