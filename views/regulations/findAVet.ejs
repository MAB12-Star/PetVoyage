<% layout('layouts/boilerplate') %>
<!-- Hero Section & Navigation -->
<div class="bg-light py-5 text-center border-bottom">
    <h1 class="fw-bold display-5">Compare Pet Travel Policies Easily</h1>
    <p class="fs-5 text-muted">Select your countries and pet type to see import/export rules instantly.</p>

    <div class="d-flex justify-content-center gap-3 mt-4 flex-wrap">
        <a href="/regulations/newSearch" class="btn btn-outline-secondary px-4 py-2">
            <i class="bi bi-globe-americas d-block fs-3"></i>
            <small>Country Policies</small>
        </a>
        <a href="/regulations/searchFlights" class="btn btn-outline-secondary px-4 py-2">
            <i class="bi bi-airplane d-block fs-3"></i>
            <small>Airline Policies</small>
        </a>
        <a href="/regulations/airlineList" class="btn btn-outline-secondary px-4 py-2">
            <i class="bi bi-card-list d-block fs-3"></i>
            <small>Airline List</small>
        </a>
        <a href="/findAVet" class="btn btn-dark px-4 py-2 px-4 py-2">
            <i class="bi bi-hospital d-block fs-3"></i>
            <small>Find a Vet</small>
        </a>
        <a href="/blog" class="btn btn-outline-secondary px-4 py-2">
            <i class="bi bi-journal-text d-block fs-3"></i>
            <small>Blog</small>
        </a>
    </div>
</div>
<div class="container mt-5">
<div class="card bg-white shadow-lg mb-3 border  ">
             

        <div class="card-body">
    <div class="row">
        <h2 class="text-center text-primary-emphasis mb-3 mt-1"><strong>Find a Vet with Pet Travel Experience</strong></h2>
        <!-- Map on the left -->
        <div class="col-md-6">
            <div id="vetMap" class="border rounded" style="height: 500px; width: 100%;"></div>
        </div>
        
        <!-- Search input and clinic details on the right -->
        <div class="col-md-6">
            <div class="card shadow-lg p-4 border-secondary rounded">
              
                <p class="text-center">
                    Enter your zip code to find veterinary clinics near you that can help with pet travel.
                </p>
                <form id="vetSearchForm" class="validated-form">
                    <!-- Zip code input with a button -->
                    <div class="input-group mb-3">
                        <input type="text" id="zipCode" class="form-control" placeholder="Enter zip code" required>
                        <button id="searchButton" class="btn btn-outline-secondary" type="button">
                            <i class="bi bi-geo-alt"></i> Search
                        </button>
                    </div>
                </form>
                
                <!-- Scrollable area for clinic details -->
                <div class="mt-4">
                    <h5>Nearby Clinics:</h5>
                    <div id="clinicDetails" class="overflow-auto border rounded p-3" style="height: 300px;">
                        <!-- Cards will be dynamically added here -->
                        <p class="text-center text-muted">No clinics found. Enter a zip code to search.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
   let vetMap;
const clinicDetailsContainer = document.getElementById('clinicDetails');
const zipCodeInput = document.getElementById('zipCode');
const searchButton = document.getElementById('searchButton');

// Initialize the map
function initVetMap(lat, lng) {
    vetMap = new google.maps.Map(document.getElementById('vetMap'), {
        center: { lat: lat, lng: lng },
        zoom: 12
    });

    fetchNearbyVetClinics(lat, lng);
}

// Fetch nearby veterinary clinics using Text Search
function fetchNearbyVetClinics(lat, lng) {
    const service = new google.maps.places.PlacesService(vetMap);
    const request = {
        query: 'veterinary_care',
        location: new google.maps.LatLng(lat, lng),
        radius: 30000 // 30 km search radius
    };

    // Clear existing clinic list
    clinicDetailsContainer.innerHTML = '';

    service.textSearch(request, function (results, status) {
        if (status === google.maps.places.PlacesServiceStatus.OK) {
            results.forEach(function (place) {
                console.log(`[DEBUG] Found Clinic: ${place.name} - Fetching details...`);
                getClinicDetails(place.place_id); // Get full details
            });
        } else {
            console.error("[ERROR] No clinics found or API request failed:", status);
            clinicDetailsContainer.innerHTML = '<p class="text-center text-muted">No clinics found in this area.</p>';
        }
    });
}

// Function to fetch clinic details (phone number, website, address)
function getClinicDetails(placeId) {
    const service = new google.maps.places.PlacesService(vetMap);
    const request = {
        placeId: placeId,
        fields: ["name", "formatted_address", "formatted_phone_number", "international_phone_number", "website", "geometry"]
    };

    service.getDetails(request, function (place, status) {
        console.log(`[DEBUG] Fetching details for Place ID: ${placeId}`);

        if (status === google.maps.places.PlacesServiceStatus.OK) {
            console.log(`[DEBUG] Full Details for ${place.name}:`, place);

            const phoneNumber = place.formatted_phone_number || place.international_phone_number || "Phone not available";
            const website = place.website ? `<a href="${place.website}" target="_blank">${place.website}</a>` : "No website available";

            console.log(`[DEBUG] Clinic: ${place.name}, Phone: ${phoneNumber}, Website: ${website}`);

            // Add clinic details to UI
            addClinicCard(place, phoneNumber, website);
        } else {
            console.error(`[ERROR] Failed to get details for Place ID: ${placeId} - Status: ${status}`);
        }
    });
}

// Function to create and display clinic cards
function addClinicCard(place, phone, website) {
    const card = document.createElement('div');
    card.className = 'card mb-3 p-2';

    const address = place.formatted_address ? place.formatted_address : "Address not available";

    card.innerHTML = `
        <h5 class="card-title">${place.name}</h5>
        <p class="card-text"><strong>Address:</strong> ${address}</p>
        <p class="card-text"><strong>Phone:</strong> ${phone}</p>
        <p class="card-text"><strong>Website:</strong> ${website}</p>
    `;

    clinicDetailsContainer.appendChild(card);
}

// Search clinics by zip code
function searchByZipCode() {
    const zipCode = zipCodeInput.value.trim();
    if (!zipCode) {
        alert('Please enter a zip code.');
        return;
    }

    const geocoder = new google.maps.Geocoder();
    console.log('[DEBUG] Entered Zip Code:', zipCode);

    geocoder.geocode({ address: zipCode }, function (results, status) {
        console.log('[DEBUG] Geocode Status:', status);
        console.log('[DEBUG] Geocode Results:', results);

        if (status === 'OK' && results.length > 0) {
            const location = results[0].geometry.location;
            const lat = location.lat();
            const lng = location.lng();

            // Center map and fetch clinics
            vetMap.setCenter({ lat, lng });
            fetchNearbyVetClinics(lat, lng);
        } else {
            alert('Unable to find location. Please enter a valid zip code.');
        }
    });
}

// Handle search button click
searchButton.addEventListener('click', searchByZipCode);

// Detect user's location on page load
navigator.geolocation.getCurrentPosition(
    function (position) {
        const lat = position.coords.latitude;
        const lng = position.coords.longitude;
        initVetMap(lat, lng);
    },
    function () {
        // Default location if geolocation fails
        const defaultLat = 37.7749; // San Francisco latitude
        const defaultLng = -122.4194; // San Francisco longitude
        initVetMap(defaultLat, defaultLng);
    }
);

</script>

<!-- Include Google Maps Script -->




<!-- Include Google Maps Script -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC9pMTMgluQR2zPuGr3vbKplafuZpf22CI&libraries=places"></script>
