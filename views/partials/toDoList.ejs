
<div class="container mt-2 rounded-3">
    <div class="card h-100 border-0 shadow-sm mb-4">
    <div class="row">
        <!-- To-Do Section Header -->
        <h2 class="alert-heading text-primary-emphasis text-center"><strong>Pet Travel Todo List!</strong></h2>
        <hr>

        <!-- Dynamic Alert Based on Authentication Status -->
        <% if (isAuthenticated) { %>
            <div class="alert alert-info mt-2" role="alert">
                <p>
                    <strong>Manage Your Tasks:</strong> Check off tasks as you complete them. Your progress will be saved automatically.
                </p>
            </div>
        <% } else { %>
            <div class="alert alert-warning mt-2 text-center" role="alert">
                <h5><strong>New Feature! ✅</strong></h5>
                <p>
                    Want to keep track of your pet travel tasks? 
                    <a href="/login" class="btn btn-sm btn-primary">Log in</a> with your Gmail.
                   
                </p>
            </div>
        <% } %>
        <!-- To-Do Section -->
    <!-- Add New Task -->
<% if (isAuthenticated) { %>
  <form id="add-task-form" class="d-flex mb-3">
    <input type="text" id="new-task" class="form-control me-2" placeholder="Add a new task..." required>
    <button type="submit" class="btn btn-primary">Add</button>
  </form>
<% } %>

<%
  const todoCount = Array.isArray(toDoList?.["To-Do"]) ? toDoList["To-Do"].length : 0;
  const completedCount = Array.isArray(toDoList?.completed) ? toDoList.completed.length : 0;
  const totalCount = todoCount + completedCount;
  const pct = totalCount ? Math.round((completedCount / totalCount) * 100) : 0;
%>

<!-- ✅ Progress Bar -->
<div class="progress mb-4">
  <div class="progress-bar bg-success" 
       role="progressbar" 
       style="width: <%= pct != null ? pct : 0 %>%;"
       aria-valuenow="<%= completedCount %>" 
       aria-valuemin="0" 
       aria-valuemax="<%= totalCount %>">
    <%= completedCount %>/<%= totalCount %> Done
  </div>
</div>

<!-- ✅ Reset Button -->
<% if (isAuthenticated) { %>
  <form action="/toDoList/reset" method="POST" class="text-end mb-3">
    <button class="btn btn-outline-danger btn-sm">Reset to Default</button>
  </form>
<% } %>


        
                <!-- To-Do Section -->
                <div class="col-12">
                    <div class="card border-0 shadow-sm p-3 mb-3 bg-white rounded">
                        <h3 class="text-primary text-primary-emphasis"><strong>To-Do</strong></h3> 
                        <ul id="To-Do" class="task-list border p-3 rounded list-unstyled">
                            <% (toDoList["To-Do"] || []).forEach(task => { %>
                                <li class="form-check">
                                    <input class="form-check-input task-checkbox" type="checkbox" 
                                           data-task="<%= task %>" data-section="To-Do"
                                           <% if (!isAuthenticated) { %> disabled <% } %>> 
                                    <label class="form-check-label"><%= task %></label>
                                </li>
                            <% }) %>
                        </ul>
                    </div>
                </div>
        
                <!-- Completed Section -->
                <div class="col-12">
                    <div class="card border-0 shadow-sm p-3 mb-3 bg-white rounded">
                        <h3 class="text-success-emphasis"><strong> Completed</strong></h3>
                        <ul id="completed" class="task-list border p-3 rounded list-unstyled">
                            <% (toDoList["completed"] || []).forEach(task => { %>
                                <li class="form-check">
                                    <input class="form-check-input task-checkbox" type="checkbox" checked
                                           data-task="<%= task %>" data-section="completed"
                                           <% if (!isAuthenticated) { %> disabled <% } %>> 
                                    <label class="form-check-label text-decoration-line-through"><%= task %></label>
                                </li>
                            <% }) %>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
<div id="auth-status" data-authenticated="<%= isAuthenticated %>"></div></div>
<% if (isAuthenticated) { %>
  <form action="/toDoList/uploadDoc" method="POST" enctype="multipart/form-data" class="mt-4">
    <label for="doc" class="form-label fw-bold">Upload a Pet Travel Document</label>
    <input type="file" name="doc" id="doc" class="form-control mb-2" required>
    <button class="btn btn-success btn-sm">Upload</button>
  </form>

  <% if (user && user.uploadedDocs && user.uploadedDocs.length > 0) { %>
    <h5 class="mt-3">My Documents:</h5>
    <ul class="list-group">
      <% user.uploadedDocs.forEach(doc => { %>
        <li class="list-group-item">
          <a href="<%= doc.url %>" target="_blank"><%= doc.name %></a>
        </li>
      <% }) %>
    </ul>
  <% } %>
<% } %>

<section class="mt-5">
  <h4>Recommended Next Steps</h4>
  <div class="d-flex flex-wrap gap-3 justify-content-center">
    <a href="/flights/searchFlights" class="btn btn-outline-info">Book Flights</a>
    <a href="/blog" class="btn btn-outline-secondary">Read Pet Travel Tips</a>
    <a href="https://petsvoyage.myshopify.com/" class="btn btn-outline-success">Shop Pet Travel Gear</a>
  </div>
</section>

<script>
  const addForm = document.getElementById('add-task-form');
  if (addForm) {
    addForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const task = document.getElementById('new-task').value.trim();
      if (!task) return;
      try {
        const res = await fetch('/toDoList/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ task }),
        });
        if (res.ok) location.reload();
      } catch (err) {
        console.error('Error adding task:', err);
      }
    });
  }
</script>

<!-- ✅ JavaScript to Handle Checkbox Updates -->
<script>
    document.querySelectorAll('.task-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', async function () {
            const task = this.dataset.task;
            const fromSection = this.dataset.section;
            const toSection = this.checked ? "completed" : "To-Do";

            if (!task || !fromSection || !toSection) {
                return alert('Invalid task update.');
            }

            const isAuthenticated = document.getElementById('auth-status').dataset.authenticated === 'true';
            
            if (isAuthenticated) {
                try {
                    const response = await fetch('/toDoList/update', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ task, fromSection, toSection }),
                    });

                    if (response.ok) {
                        location.reload(); // Reload page to reflect changes
                    } else {
                        console.error('Failed to update task on server.');
                    }
                } catch (error) {
                    console.error('Error updating task:', error);
                }
            } else {
                alert('Please log in to save your progress.');
            }
        });
    });
</script>
