<!-- views/partials/chatGPT.ejs -->
<div class="card border-secondary shadow-lg p-3 mb-5 bg-white rounded"
     id="pv-ai-<%= idSuffix || 'one' %>">
  <div class="card-body">
    <h1 class="text-center text-secondary-emphasis mb-2"><strong>PetVoyage AI</strong></h1>
    <p class="lead text-center text-muted mb-3">
      Hi, I‚Äôm <strong>Scout</strong> üêæ‚Äîyour pet-travel co-pilot. Ask me anything, or let‚Äôs build a plan together.
    </p>

    <!-- Tabs -->
    <ul class="nav nav-pills justify-content-center mb-3" id="pv-tabs-<%= idSuffix || 'one' %>">
      <li class="nav-item"><button class="nav-link active" data-pvtab="ask">üí¨ Ask AI</button></li>
      <li class="nav-item"><button class="nav-link" data-pvtab="plan">üß≠ Plan Pet Travel</button></li>
    </ul>

    <!-- Pane: Ask AI -->
    <div class="pv-pane pv-pane-ask">
      <div class="alert alert-info small mb-3">
        Tip: I‚Äôm great at quick checks. Try ‚ÄúDoes Air France allow cats in cabin?‚Äù or
        ‚ÄúWhat shots does a dog need to enter Mexico?‚Äù
      </div>

      <form class="pv-ask-form" aria-label="Ask PetVoyage AI a question">
        <label class="form-label" for="pv-ask-<%= idSuffix || 'one' %>">Your Question</label>
        <div class="input-group">
          <input id="pv-ask-<%= idSuffix || 'one' %>" type="text"
                 class="form-control pv-ask-input"
                 placeholder="Ask about airline rules, country requirements, documentation‚Ä¶"
                 required>
          <button type="submit" class="btn btn-primary">Ask</button>
        </div>
        <div class="form-text">I‚Äôll answer concisely and cite the source when I can.</div>
      </form>

      <!-- Quick examples -->
      <div class="d-flex flex-wrap gap-2 mt-3">
        <button type="button" class="btn btn-sm btn-outline-secondary pv-example"
                data-text="Does Air France allow cats in cabin?">Air France + cats</button>
        <button type="button" class="btn btn-sm btn-outline-secondary pv-example"
                data-text="What vaccinations does a dog need to enter Mexico?">Dog ‚Üí Mexico vaccines</button>
        <button type="button" class="btn btn-sm btn-outline-secondary pv-example"
                data-text="Can brachycephalic breeds fly cargo on Delta?">Brachycephalic on Delta</button>
      </div>

      <div class="alert alert-success mt-3 pv-ask-success" style="display:none;">
        <h6 class="mb-0">Sent! Scout is thinking‚Ä¶</h6>
      </div>

      <div class="mt-3 pv-ask-answer-wrap" style="display:none;">
        <h5 class="text-secondary mb-2"><strong>AI‚Äôs Answer</strong></h5>
        <div class="border p-3 rounded bg-light pv-ask-answer" aria-live="polite"></div>
      </div>

      <p class="text-muted small mt-3 mb-0">
        ‚ö†Ô∏è Always confirm critical details with your airline and official authorities before travel.
      </p>
    </div>

    <!-- Pane: Plan Pet Travel -->
    <div class="pv-pane pv-pane-plan" style="display:none;">
      <div class="alert alert-info small mb-3">
        How it works: pick an <strong>airline</strong>, <strong>destination country</strong>, and <strong>pet type</strong>.
        I‚Äôll split the results into <em>Airline requirements</em> vs <em>Country (immigration) requirements</em>,
        suggest a timeline, and let you <strong>save it to your dashboard</strong>.
      </div>

      <form class="pv-plan-form" aria-label="Build your pet travel plan">
        <div class="mb-3">
          <label class="form-label">Airline</label>
          <select class="form-select pv-airline" required></select>
          <div class="form-text">Choose the carrier you‚Äôll fly. Policies can vary widely.</div>
        </div>

        <div class="mb-3">
          <label class="form-label">Destination Country</label>
          <select class="form-select pv-country" required></select>
          <div class="form-text">This determines the immigration/entry rules for your pet.</div>
        </div>

        <div class="mb-3">
          <label class="form-label">Pet Type</label>
          <select class="form-select pv-pet" required disabled>
            <option value="">Select country first to load available pet types‚Ä¶</option>
          </select>
          <div class="form-text">Pet types update based on the country you pick.</div>
        </div>

        <div class="text-center">
          <button class="btn btn-primary" type="submit">Get Requirements</button>
        </div>
      </form>

      <!-- Server returns a full, styled itinerary (with Save + Find Vet buttons). -->
      <div class="mt-4 pv-plan-results" style="display:none;"></div>

      <p class="text-muted small mt-3 mb-0">
        ‚ÑπÔ∏è I combine your database + official sources + AI. I‚Äôll clearly label anything I infer for you.
      </p>
    </div>
  </div>
</div>


<script>
    (function () {
      var suf = "<%= idSuffix || 'one' %>";
      var root = document.getElementById('pv-ai-' + suf);
      if (!root) return;
    
      // Tabs
      var tabs = root.querySelectorAll('[data-pvtab]');
      var paneAsk = root.querySelector('.pv-pane-ask');
      var panePlan = root.querySelector('.pv-pane-plan');
      tabs.forEach(function(btn){
        btn.addEventListener('click', function(){
          tabs.forEach(function(b){ b.classList.remove('active'); });
          btn.classList.add('active');
          var tab = btn.getAttribute('data-pvtab');
          paneAsk.style.display = (tab === 'ask') ? '' : 'none';
          panePlan.style.display = (tab === 'plan') ? '' : 'none';
        });
      });
    
      // ASK AI
      var askForm = root.querySelector('.pv-ask-form');
      var askInput = root.querySelector('.pv-ask-input');
      var askSuccess = root.querySelector('.pv-ask-success');
      var askAnsWrap = root.querySelector('.pv-ask-answer-wrap');
      var askAns = root.querySelector('.pv-ask-answer');
    
      askForm.addEventListener('submit', async function(e){
        e.preventDefault();
        var q = (askInput.value || '').trim();
        if (!q) return;
    
        askSuccess.style.display = 'none';
        askAnsWrap.style.display = 'block';
        askAns.textContent = 'Thinking...';
    
        try {
          var res = await fetch('/ai/ask-question', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ user_question: q })
          });
          var text = await res.text();
          var payload = {};
          try { payload = JSON.parse(text); } catch(e){}
    
          if (!res.ok) {
            askAns.textContent = (payload && (payload.details || payload.error)) || 'Request failed.';
            return;
          }
          askSuccess.style.display = 'block';
          askAns.textContent = payload.answer || 'No answer.';
        } catch (err) {
          console.error('AI fetch error:', err);
          askAns.textContent = 'Network error. Please try again.';
        }

        
      });
    
      // PLAN PET TRAVEL
      var planForm = root.querySelector('.pv-plan-form');
      var selAirline = root.querySelector('.pv-airline');
      var selCountry = root.querySelector('.pv-country');
      var selPet = root.querySelector('.pv-pet');
      var resWrap = root.querySelector('.pv-plan-results');
    
      function cap(s){ return (s||'').charAt(0).toUpperCase() + (s||'').slice(1); }
      function setPets(pets){
        const options = (pets||[]).map(function(p){ return '<option value="'+p+'">'+cap(p)+'</option>'; }).join('');
        selPet.innerHTML = '<option value="">Select pet</option>' + options;
        selPet.disabled = !(pets && pets.length);
      }
    
      // Load airlines + countries (no global pet list)
      fetch('/ai/pet-check/options')
        .then(function(r){ return r.json(); })
        .then(function(data){
          var airlines = data.airlines || [];
          var countries = data.countries || [];
    
          selAirline.innerHTML = '<option value="">Select airline</option>' +
            airlines.map(function(a){
              return '<option value="'+a._id+'" data-code="'+(a.airlineCode||'')+'">'+a.name+(a.airlineCode?(' ('+a.airlineCode+')'):'')+'</option>';
            }).join('');
    
          selCountry.innerHTML = '<option value="">Select country</option>' +
            countries.map(function(c){ return '<option value="'+c+'">'+c+'</option>'; }).join('');
    
          // disable pets until a country is chosen
          setPets([]);
        })
        .catch(function(e){
          console.error('options error', e);
          setPets([]);
        });
    
      // When country changes, fetch that country's pet types
      selCountry.addEventListener('change', function(){
        var c = selCountry.value;
        if (!c) { setPets([]); return; }
        selPet.disabled = true;
        selPet.innerHTML = '<option value="">Loading pets‚Ä¶</option>';
        fetch('/ai/pet-check/pet-types?country=' + encodeURIComponent(c))
          .then(function(r){ return r.json(); })
          .then(function(d){ setPets(d.petTypes || []); })
          .catch(function(){ setPets([]); });
      });
    
      // Submit: request server-built itinerary HTML and render it
      planForm.addEventListener('submit', async function(e){
        e.preventDefault();
        var airlineId = selAirline.value;
        var airlineCode = selAirline.selectedOptions[0] && selAirline.selectedOptions[0].getAttribute('data-code');
        var country = selCountry.value;
        var petType = selPet.value;
        if (!airlineId || !country || !petType) return;
    
        resWrap.style.display = 'block';
        resWrap.innerHTML = '<div class="border rounded p-3 bg-light">Loading‚Ä¶</div>';
    
        try {
          var res = await fetch('/ai/pet-check', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ airlineId: airlineId, airlineCode: airlineCode, country: country, petType: petType })
          });
          var data = await res.json();
    
          if (!res.ok || data.error) {
            resWrap.innerHTML = '<div class="alert alert-danger mb-0">' + (data.error || 'Lookup failed.') + '</div>';
            return;
          }
    
          // Render server HTML + actions
          resWrap.innerHTML = (data.html || '<div class="alert alert-warning mb-0">No details available.</div>') + `
            <div class="mt-3 d-flex flex-wrap gap-2">
              <button class="btn btn-success pv-save-itin">Save to my dashboard</button>
              <button class="btn btn-outline-secondary pv-find-vet">Find a nearby vet</button>
              ${data.airline && data.airline.petPolicyURL ? `<a class="btn btn-outline-primary" href="${data.airline.petPolicyURL}" target="_blank" rel="noopener">Airline Pet Policy</a>` : ``}
            </div>
          `;
    
          // bind the vet button that was just injected
          var vetBtn2 = resWrap.querySelector('.pv-find-vet');
          if (vetBtn2) {
            vetBtn2.addEventListener('click', function(ev){
              ev.preventDefault();
              if (!navigator.geolocation) { alert('Geolocation not available.'); return; }
              navigator.geolocation.getCurrentPosition(
                function(pos){
                  var lat = pos.coords.latitude, lng = pos.coords.longitude;
                  window.location.href = '/findAVet?lat='+lat+'&lng='+lng;
                },
                function(err){ alert('Could not get location: ' + err.message); },
                { enableHighAccuracy: true, timeout: 8000 }
              );
            });
          }
        } catch (err) {
          console.error('lookup error', err);
          resWrap.innerHTML = '<div class="alert alert-danger mb-0">Network error.</div>';
        }
    
        // bind save button
        var saveBtn = resWrap.querySelector('.pv-save-itin');
        if (saveBtn) {
          saveBtn.addEventListener('click', async function() {
            var itin = resWrap.querySelector('.pv-itinerary');
            if (!itin) { alert('Nothing to save.'); return; }
    
            // try to grab airline id/code from the selected option
            var selected = selAirline.selectedOptions[0];
            var airlineId = selAirline.value || '';
            var airlineCode = (selected && selected.getAttribute('data-code')) || '';
    
            // payload to favorites route
            var payload = {
              airlineId: airlineId || undefined,
              airlineCode: airlineCode || undefined,
              airlineName: '',          // optional; server will resolve from DB if possible
              airlineSlug: '',          // optional
              petPolicyURL: '',         // optional
              country: selCountry.value,
              petType: selPet.value,
              html: itin.outerHTML
            };
    
            try {
              const r = await fetch('/favorites/saveItinerary', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
              });
              const j = await r.json();
              if (!r.ok) {
                alert(j.message || 'Could not save.');
                return;
              }
              // small toast
              const ok = document.createElement('div');
              ok.className = 'alert alert-success mt-3';
              ok.textContent = j.message || 'Saved.';
              resWrap.appendChild(ok);
              setTimeout(() => ok.remove(), 3000);
            } catch (e) {
              console.error('save itinerary failed', e);
              alert('Network error while saving.');
            }
          });
        }
      });
    })();
    </script>
    
